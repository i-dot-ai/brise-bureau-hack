[tool.ruff]
line-length = 120
target-version = 'py312'

[tool.cruft]
skip = [
    
    # fastapi_paths
    "backend/fastapi/settings.py",
    "backend/fastapi/tests.py",
    
    # streamlit_paths
    "frontend/streamlit/app/__init__.py",
    "frontend/streamlit/tests",
    # general_paths
    ".env.*",
    "data",
]

[tool.pytest.ini_options]
minversion = "8.3"
addopts = "-ra -q"
testpaths = [
    "frontend/streamlit/tests",
    "backend/fastapi/tests"
]

[tool.poetry]
name = "paris-hack"
version = "0.1.0"
description = "Paris Hack project"
authors = ["i.AI <i-dot-ai-enquiries@cabinetoffice.gov.uk>"]
license = "MIT"
readme = "README.md"
package-mode = true
packages = [
    { include = "shared_utils" },
    { include = "backend" },
    { include = "frontend" },
    { include = "tests" }
]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
elasticsearch = "^8.17.1"
langchain = "^0.3.17"
openai = "^1.61.0"
python-docx = "^1.1.2"
pdfminer-six = "^20240706"
pi-heif = "^0.21.0"
unstructured-inference = "^0.8.7"
pdf2image = "^1.17.0"
unstructured = "^0.16.17"

streamlit-mermaid = "^0.3.0"
python-dotenv = "^1.0.1"
plotly = "^6.0.0"

[tool.poetry.group.streamlit]
optional = true

[tool.poetry.group.streamlit.dependencies]
pandas = ">=2.2.2"
streamlit = ">=1.37.1"
numpy = "<2"
matplotlib = ">=3.9.2"
unstructured = "^0.16.17"

[tool.poetry.group.fastapi]
optional = true

[tool.poetry.group.fastapi.dependencies]
fastapi = ">=0.112.0"
sqlalchemy = ">=2.0.32"
decorator = "^5.1.1"
psycopg2-binary = "^2.9.9"
alembic = "^1.13.3"
pydantic-settings = "^2.5.2"
uvicorn = "^0.31.0"
pyjwt = "^2.9.0"
sentry-sdk = {extras = ["fastapi"], version = "^2.18.0"}

[tool.poetry.group.dev.dependencies]
bumpversion = "^0.6.0"
pytest = "^8.3.2"
pytest-env = "^1.1.1"
pytest-mock = "^3.14.0"
pytest-cov = "^5.0.0"
pytest-dotenv = "^0.5.2"
pytest-asyncio = "^0.23.8"
ruff = "^0.5.6"
bandit = "^1.7.9"
detect-secrets = "^1.5.0"
playwright = "^1.45"
pytest-playwright = "^0.5"
diagrams = "^0.23.4"
httpx = "0.27.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.format]
exclude = ["data/*"]

[tool.ruff.lint]
# Dribble in those we have commented out, asterisked ones first
select = [
    "A",
    "B",
    "C",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ARG",
    "ASYNC",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "EXE",
    "FURB",
    "ICN",
    "INT",
    "ISC",
    "LOG",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "SLOT",
    "TCH",
    "TD",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
exclude = ["out/*"]
ignore = ["COM812", "DJ001", "RET505", "RET508", "PLR0913"]

[tool.ruff.lint.isort]
known-first-party = ["backend", "frontend"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S106", "PLR0913", "PLR0915", "PLR2004", "TD003", "S311"]
"*/tests/*" = ["S101", "S106", "PLR0913", "PLR0915", "PLR2004", "TD003"]
"*/tests_playwright/*" = ["S101", "S106", "PLR0913", "PLR2004", "TD003"]
